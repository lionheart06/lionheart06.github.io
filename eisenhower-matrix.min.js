var EisenhowerMatrix=function(e){"use strict";var t;e.QuadrantType=void 0,(t=e.QuadrantType||(e.QuadrantType={})).URGENT_IMPORTANT="urgent_important",t.NOT_URGENT_IMPORTANT="not_urgent_important",t.URGENT_NOT_IMPORTANT="urgent_not_important",t.NOT_URGENT_NOT_IMPORTANT="not_urgent_not_important";class EisenhowerMatrix{constructor(){this.tasks=new Map}addTask(e,t,n,a){const r=a||this.generateId(),s={id:r,title:e,description:t,quadrant:n,createdAt:new Date,isCompleted:!1};return this.tasks.set(r,s),s}removeTask(e){return this.tasks.delete(e)}updateTask(e,t){const n=this.tasks.get(e);if(!n)return null;const a={...n,...t};return this.tasks.set(e,a),a}completeTask(e){const t=this.tasks.get(e);if(!t)return null;const n={...t,isCompleted:!0,completedAt:new Date};return this.tasks.set(e,n),n}getTask(e){return this.tasks.get(e)||null}getAllTasks(){return Array.from(this.tasks.values())}getTasksByQuadrant(e){return this.getAllTasks().filter(t=>t.quadrant===e)}getCompletedTasks(){return this.getAllTasks().filter(e=>e.isCompleted)}getPendingTasks(){return this.getAllTasks().filter(e=>!e.isCompleted)}getMatrix(){return{[e.QuadrantType.URGENT_IMPORTANT]:this.getTasksByQuadrant(e.QuadrantType.URGENT_IMPORTANT),[e.QuadrantType.NOT_URGENT_IMPORTANT]:this.getTasksByQuadrant(e.QuadrantType.NOT_URGENT_IMPORTANT),[e.QuadrantType.URGENT_NOT_IMPORTANT]:this.getTasksByQuadrant(e.QuadrantType.URGENT_NOT_IMPORTANT),[e.QuadrantType.NOT_URGENT_NOT_IMPORTANT]:this.getTasksByQuadrant(e.QuadrantType.NOT_URGENT_NOT_IMPORTANT)}}clear(){this.tasks.clear()}getTaskCount(){return this.tasks.size}generateId(){return Math.random().toString(36).substr(2,9)+Date.now().toString(36)}}EisenhowerMatrix.QUADRANTS={[e.QuadrantType.URGENT_IMPORTANT]:{type:e.QuadrantType.URGENT_IMPORTANT,name:"Do First",description:"Urgent and Important",actionStrategy:"Do these tasks immediately"},[e.QuadrantType.NOT_URGENT_IMPORTANT]:{type:e.QuadrantType.NOT_URGENT_IMPORTANT,name:"Schedule",description:"Important but Not Urgent",actionStrategy:"Schedule these tasks for later"},[e.QuadrantType.URGENT_NOT_IMPORTANT]:{type:e.QuadrantType.URGENT_NOT_IMPORTANT,name:"Delegate",description:"Urgent but Not Important",actionStrategy:"Delegate these tasks if possible"},[e.QuadrantType.NOT_URGENT_NOT_IMPORTANT]:{type:e.QuadrantType.NOT_URGENT_NOT_IMPORTANT,name:"Eliminate",description:"Neither Urgent nor Important",actionStrategy:"Eliminate these tasks"}};class LocalStorageAdapter{constructor(e="eisenhower-matrix"){this.key=e}async save(e){localStorage.setItem(this.key,JSON.stringify(e))}async load(){const e=localStorage.getItem(this.key);return e?JSON.parse(e):null}}return e.DraggableMatrix=class{constructor(e,t=new LocalStorageAdapter,n={}){this.matrix=new EisenhowerMatrix,this.storageAdapter=t,this.size={width:"1200px",height:"auto",quadrantMinHeight:"300px",fontSize:"14px",padding:"20px",taskPadding:"12px",titleSize:"2em",...n};const a=document.getElementById(e);if(!a)throw new Error(`Container with id '${e}' not found`);this.container=a,this.init()}init(){this.injectCSS(),this.createHTML(),this.setupEventListeners(),this.loadData(),this.loadSampleTasks()}injectCSS(){const e=document.createElement("style");e.textContent=`\n      .eisenhower-container {\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        max-width: ${this.size.width};\n        margin: 0 auto;\n        padding: ${this.size.padding};\n        background-color: #f5f5f5;\n        font-size: ${this.size.fontSize};\n      }\n      \n      .eisenhower-title {\n        text-align: center;\n        color: #333;\n        margin-bottom: 30px;\n        font-size: ${this.size.titleSize};\n      }\n      \n      .eisenhower-matrix {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 10px;\n        margin-bottom: 30px;\n        background: white;\n        border: 2px solid #ddd;\n        border-radius: 8px;\n        overflow: hidden;\n        position: relative;\n        height: ${this.size.height};\n      }\n      \n      .eisenhower-quadrant {\n        min-height: ${this.size.quadrantMinHeight};\n        padding: ${this.size.padding};\n        border: 1px solid #e0e0e0;\n        position: relative;\n        background: #fafafa;\n      }\n      \n      .eisenhower-quadrant.drag-over {\n        background-color: #e8f5e8;\n        border-color: #4CAF50;\n      }\n      \n      .eisenhower-quadrant-header {\n        font-weight: bold;\n        font-size: 16px;\n        margin-bottom: 10px;\n        padding-bottom: 10px;\n        border-bottom: 2px solid #ddd;\n      }\n      \n      .eisenhower-quadrant-strategy {\n        font-size: 12px;\n        color: #666;\n        margin-bottom: 15px;\n        font-style: italic;\n      }\n      \n      .eisenhower-quadrant.urgent-important {\n        background: linear-gradient(135deg, #ffebee, #ffcdd2);\n      }\n      \n      .eisenhower-quadrant.not-urgent-important {\n        background: linear-gradient(135deg, #e8f5e8, #c8e6c9);\n      }\n      \n      .eisenhower-quadrant.urgent-not-important {\n        background: linear-gradient(135deg, #fff3e0, #ffe0b2);\n      }\n      \n      .eisenhower-quadrant.not-urgent-not-important {\n        background: linear-gradient(135deg, #f3e5f5, #e1bee7);\n      }\n      \n      .eisenhower-task {\n        background: white;\n        border: 1px solid #ddd;\n        border-radius: 6px;\n        padding: ${this.size.taskPadding};\n        margin-bottom: 10px;\n        cursor: move;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        transition: all 0.2s ease;\n      }\n      \n      .eisenhower-task:hover {\n        box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n        transform: translateY(-2px);\n      }\n      \n      .eisenhower-task.dragging {\n        opacity: 0.5;\n        transform: rotate(5deg);\n      }\n      \n      .eisenhower-task-title {\n        font-weight: 600;\n        margin-bottom: 5px;\n        color: #333;\n      }\n      \n      .eisenhower-task-description {\n        font-size: 14px;\n        color: #666;\n        line-height: 1.4;\n      }\n      \n      .eisenhower-axis-labels {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        pointer-events: none;\n      }\n      \n      .eisenhower-urgent-label, .eisenhower-important-label {\n        position: absolute;\n        font-weight: bold;\n        color: #666;\n        font-size: 14px;\n      }\n      \n      .eisenhower-urgent-label {\n        top: -25px;\n        left: 50%;\n        transform: translateX(-50%);\n      }\n      \n      .eisenhower-important-label {\n        left: -80px;\n        top: 50%;\n        transform: translateY(-50%) rotate(-90deg);\n        transform-origin: center;\n      }\n    `,document.head.appendChild(e)}createHTML(){this.container.innerHTML='\n      <div class="eisenhower-container">\n        <h1 class="eisenhower-title">Eisenhower Matrix</h1>\n        <div class="eisenhower-matrix">\n          <div class="eisenhower-axis-labels">\n            <div class="eisenhower-urgent-label">URGENT →</div>\n            <div class="eisenhower-important-label">IMPORTANT ↑</div>\n          </div>\n          \n          <div class="eisenhower-quadrant urgent-important" data-quadrant="urgent_important">\n            <div class="eisenhower-quadrant-header">Do First</div>\n            <div class="eisenhower-quadrant-strategy">Do these tasks immediately</div>\n            <div class="eisenhower-tasks-container"></div>\n          </div>\n          \n          <div class="eisenhower-quadrant not-urgent-important" data-quadrant="not_urgent_important">\n            <div class="eisenhower-quadrant-header">Schedule</div>\n            <div class="eisenhower-quadrant-strategy">Schedule these tasks for later</div>\n            <div class="eisenhower-tasks-container"></div>\n          </div>\n          \n          <div class="eisenhower-quadrant urgent-not-important" data-quadrant="urgent_not_important">\n            <div class="eisenhower-quadrant-header">Delegate</div>\n            <div class="eisenhower-quadrant-strategy">Delegate these tasks if possible</div>\n            <div class="eisenhower-tasks-container"></div>\n          </div>\n          \n          <div class="eisenhower-quadrant not-urgent-not-important" data-quadrant="not_urgent_not_important">\n            <div class="eisenhower-quadrant-header">Eliminate</div>\n            <div class="eisenhower-quadrant-strategy">Eliminate these tasks</div>\n            <div class="eisenhower-tasks-container"></div>\n          </div>\n        </div>\n      </div>\n    '}setupEventListeners(){this.container.querySelectorAll(".eisenhower-quadrant").forEach(e=>{e.addEventListener("dragover",this.handleDragOver.bind(this)),e.addEventListener("drop",this.handleDrop.bind(this)),e.addEventListener("dragleave",this.handleDragLeave.bind(this))})}handleDragOver(e){const t=e;t.preventDefault(),t.currentTarget.classList.add("drag-over")}handleDragLeave(e){e.currentTarget.classList.remove("drag-over")}handleDrop(e){const t=e;t.preventDefault();const n=t.dataTransfer?.getData("text/plain"),a=t.currentTarget.dataset.quadrant;t.currentTarget.classList.remove("drag-over"),n&&a&&this.moveTask(n,a)}moveTask(e,t){this.matrix.updateTask(e,{quadrant:t})&&(this.render(),this.saveData())}async loadData(){try{const e=await this.storageAdapter.load();e&&e.tasks&&(this.matrix.clear(),e.tasks.forEach(e=>{this.matrix.addTask(e.title,e.description,e.quadrant,e.id)}),this.render())}catch(e){}}async saveData(){try{const e={tasks:this.matrix.getAllTasks(),timestamp:(new Date).toISOString()};await this.storageAdapter.save(e)}catch(e){}}render(){const e=this.matrix.getMatrix();Object.entries(e).forEach(([e,t])=>{const n=this.container.querySelector(`[data-quadrant="${e}"] .eisenhower-tasks-container`);n&&(n.innerHTML="",t.forEach(e=>{const t=this.createTaskElement(e);n.appendChild(t)}))})}createTaskElement(e){const t=document.createElement("div");return t.className="eisenhower-task",t.draggable=!0,t.dataset.taskId=e.id,t.innerHTML=`\n      <div class="eisenhower-task-title">${e.title}</div>\n      <div class="eisenhower-task-description">${e.description||""}</div>\n    `,t.addEventListener("dragstart",n=>{n.dataTransfer?.setData("text/plain",e.id),t.classList.add("dragging")}),t.addEventListener("dragend",()=>{t.classList.remove("dragging")}),t.addEventListener("dblclick",()=>{confirm("Remove this task?")&&this.removeTask(e.id)}),t}loadSampleTasks(){0===this.matrix.getTaskCount()&&(this.matrix.addTask("Fix production bug","Critical system error affecting all users",e.QuadrantType.URGENT_IMPORTANT),this.matrix.addTask("Plan quarterly goals","Set strategic objectives for next quarter",e.QuadrantType.NOT_URGENT_IMPORTANT),this.matrix.addTask("Respond to emails","Answer routine correspondence",e.QuadrantType.URGENT_NOT_IMPORTANT),this.matrix.addTask("Browse social media","Check latest posts and updates",e.QuadrantType.NOT_URGENT_NOT_IMPORTANT),this.render())}addTask(e,t,n){this.matrix.addTask(e,t,n),this.render(),this.saveData()}removeTask(e){this.matrix.removeTask(e)&&(this.render(),this.saveData())}getTasks(){return this.matrix.getAllTasks()}getTasksByQuadrant(e){return this.matrix.getTasksByQuadrant(e)}clear(){this.matrix.clear(),this.render(),this.saveData()}},e.EisenhowerMatrix=EisenhowerMatrix,e.LocalStorageAdapter=LocalStorageAdapter,e}({});
